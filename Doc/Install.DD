$WW,1$$FG,5$$TX+CX,"Installing TinkerOS"$$FG$

Welcome to TinkerOS live! You can look around without installing.

If you want to install TinkerOS and you do not care about anything on the computer you are running on you can try the automated installer.  This will replace all data on the first hard drive it finds with TinkerOS so be sure you that is ok with you!  If you want to try alternative graphics modes you should consider first booting Super Grub and using the vbeinfo tool to figure out which modes your hardware supports or better yet boot the VBE tool from the USB image.  The TinkerOS installer does not filter out invalid modes unfortunately, so if you pick one graphics will fail to initialize and you will end up in text mode.  This not a big deal, you can simply do a re-install on just that partition with a different graphics mode.

Hopefully the automated installer will work for you, however if it does not you may still be able to install TinkerOS.  The original TempleOS hard drive probing code and disk partitioner are not always up to the task.  TinkerOS has attempted to improve upon the process a bit, but sometimes a manual paritioning and entering of I/O ports is required.  Usually all that needs to be done is to create a msdos (not GPT) partition table on the drive and create a primary FAT 32 partition for each TinkerOS install you want.  Then you can try going back and installing again not using the automated installer.  If you can't find the drive (or probing causes issues on your hardware) you can run lscpi in Linux to try to find the I/O ports and choose no to probing.

Dual booting with another operating system which can read FAT 32 partitions is handy for backup and transferring files.

The $LK,"::/Misc/OSInstall.HC"$ script will automate much of this.  It runs if you boot the CD/DVD-ROM.

See $LK,"Boot.DD",A="FI:::/Doc/Boot.DD"$ for an overview of booting.  See $LK,"Requirements",A="FI:::/Doc/Requirements.DD"$ for supported hardware.

Two TinkerOS partitions are highly recommended, so you can boot to a back-up and fix the primary when you work on it.  Odds are, you only need a couple gigabytes for your TinkerOS partitions.

1)
$ID,2$$LK,"Mount",A="MN:Mount"$() use if the drive is partitioned.
$ID,2$This command mounts a drive making it accessible.  For simplicity, sel $FG,2$'C'$FG$ as the first drive letter for your hard drive.  The first partition will be $FG,2$'C'$FG$, second, $FG,2$'D'$FG$, etc.  TinkerOS needs 3 numbers to utilize a hard drive -- base0, base1, and unit.  When you enter a hexadecimal number, do it like in $FG,2$C$FG$ with a $FG,2$0x$FG$ prefix.  If the probe was successful, you can just enter the number in the probe box instead of base0.
$ID,-2$
$LK,"DskPrt",A="MN:DskPrt"$($FG,2$'C'$FG$) use if drive is not partitioned

$ID,2$This will perform a special $LK,"Mount",A="MN:Mount"$() automatically.

$BK,1$WARNING:$BK,0$  This command erases everything on a hard drive.  It repartitions a whole drive and formats the partitions$FG$.  This command should be skipped if you already have your hard drive partitioned.


$BK,1$WARNING:$BK,0$  This command doesn't play well with other operating systems.  You'll need to do a $LK,"BootMHDZero",A="MN:BootMHDZero"$() to restore your drive to a state where other operating systems can partition it.
$ID,-2$
$ID,-2$2) $LK,"Fmt",A="MN:Fmt"$($FG,2$'D'$FG$,$FG,2$TRUE,FALSE,FSt_FAT32$FG$)
$ID,2$This command formats a drive with $FG,2$FAT32$FG$ or the $LK,"RedSea",A="FI:::/Doc/RedSea.DD"$ file system type.  Use the drive letter of the partition in place of $FG,2$'D'$FG$.

$BK,1$WARNING:$BK,0$  If you are upgrading, be sure not to lose the file, $FG,2$/0000Boot/OldMBR.BIN.C$FG$.

$ID,-2$3) $LK,"CopyTree",A="MN:CopyTree"$($FG,2$"T:/"$FG$,$FG,2$"D:/"$FG$)
$ID,2$This command is used to copy files onto a hard drive partition from the CD/DVD.  Use the drive letter of the partition in place of $FG,2$'D'$FG$.

$ID,-2$4) $LK,"BootHDIns",A="MN:BootHDIns"$($FG,2$'D'$FG$)
$ID,2$This command recompiles the source code on a drive and writes to the $UL,1$drive's$UL,0$ boot record.  You'll need to reenter the $LK,"Mount",A="MN:Mount"$ information so it can be stored in the kernel.

$ID,-2$5) Use Linux's Grub or TinkerOS' $LK,"BootMHDIns",A="MN:BootMHDIns"$($FG,2$'D'$FG$)
$ID,2$
The $LK,"BootMHDIns",A="MN:BootMHDIns"$() command places a boot loader on a drive.  It saves the old master boot record to $FG,2$/0000Boot/OldMBR.BIN.C$FG$ and replaces it.  When you boot, you will have the option of booting the old master boot record.  This command can be skipped if you already have a boot loader.  Be sure not to lose the copy of the old boot record, like if you reformat the drive.

Delete $FG,2$/0000Boot/OldMBR.BIN.C$FG$ if you want to get a fresh copy of a mbr, like if installing from your own custom CD containing it's own $FG,2$/0000Boot/OldMBR.BIN.C$FG$ onto a system with a non-TinkerOS boot loader.

If you have anti-virus software, it might object to having a different master boot record.
$ID,-2$
$FG,8$
* "Windows" is a trademark owned by MicroSoft Corp.
* "Linux" is a trademark owned by Linus Torvalds.
$FG$
